---
- name: "configuration: Create SSL certificate"
  ansible.builtin.copy:
    backup: true
    content: "{{ vsftpd_rsa_cert }}"
    dest: "{{ vsftpd_rsa_cert_file }}"
    mode: "0640"
    validate: /usr/bin/openssl x509 -noout -in %s
  when:
    - vsftpd_rsa_cert is defined
    - vsftpd_rsa_cert_file is defined
  notify: "restart vsftpd"
  register: ssl_result
  ignore_errors: true

- name: "configuration: Generate vsFTPd service configuration"
  ansible.builtin.template:
    backup: true
    src: "./configuration.j2"
    dest: "{{ vsftpd_config_file }}"
    mode: "0640"
  notify: "restart vsftpd"

- name: "configuration: Generate per user configuration snippets"
  ansible.builtin.copy:
    backup: true
    content: |
      local_root={{ ftp_root }}/{{ item['name'] }}
    dest: "{{ vsftpd_config_directory }}/{{ item['name'] }}"
    mode: "0640"
  loop: "{{ ftp_users | selectattr('role','equalto','user') }}"

- name: "configuration: Create logrotate configuration snippet"
  ansible.builtin.template:
    backup: true
    src: "./logrotate.j2"
    dest: "{{ logrotate_config_snippet }}"
  when:
  - stat_logrotate_config_file['stat']['exists']
  - stat_logrotate_config_directory['stat']['exists']

- name: "configuration: Create rsyslog configuration snippet"
  ansible.builtin.template:
    backup: true
    src: "./rsyslog.j2"
    dest: "{{ rsyslog_config_snippet }}"
  notify: "restart rsyslog"
  when:
  - stat_rsyslog_config_file['stat']['exists']
  - stat_rsyslog_config_directory['stat']['exists']

- name: "configuration: Enable `vsftpd` service"
  ansible.builtin.service:
    name: "{{ vsftpd_service }}"
    enabled: true
  when: ansible_check_mode == false
...
