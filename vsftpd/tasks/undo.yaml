---
- name: "undo: Uninstall packages (Debian)"
  ansible.builtin.apt:
    name: "{{ packages_install }}"
    state: absent
    update_cache: no
    purge: true
  when:
    - (ansible_os_family | lower) == 'debian'

- name: "undo: Delete main service configuration file"
  ansible.builtin.file:
    path: "{{ vsftpd_config_file }}"
    state: absent

- name: "undo: Delete configuration directory"
  ansible.builtin.file:
    path: "{{ vsftpd_config_directory }}"
    state: absent

- name: "undo: Delete logrotate configuration snippet"
  ansible.builtin.file:
    path: "{{ logrotate_config_snippet }}"
    state: absent

- name: "undo: Delete rsyslog configuration snippet"
  ansible.builtin.file:
    path: "{{ rsyslog_config_snippet }}"
    state: absent

- name: "directories: Undo Chroot and SFTP for members of {{ ftp_group['name'] }}"
  ansible.builtin.blockinfile:
    backup: true
    marker: "# {mark} ANSIBLE MANAGED BLOCK: origin={{ snippet_name }}"
    state: absent
    path: "/etc/ssh/sshd_config"
  notify: "restart sshd"

- name: "undo: Remove `{{ ftp_user['name'] }}` account"
  ansible.builtin.user:
    name: "{{ ftp_user['name'] }}"
    state: absent
    force: true

- name: "undo: Remove `{{ ftp_group['name'] }}` group"
  ansible.builtin.group:
    name: "{{ ftp_group['name'] }}"
    state: absent

- name: "undo: Remove accounts of `ftp_users`"
  ansible.builtin.user:
    name: "{{ item['name'] }}"
    state: absent
    force: true
  loop: "{{ ftp_users }}"

- name: "undo: Remove groups of `ftp_users`"
  ansible.builtin.group:
    name: "{{ item['name'] }}"
    state: absent
  loop: "{{ ftp_users }}"
...
